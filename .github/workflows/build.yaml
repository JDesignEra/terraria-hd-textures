name: Build

on: push

jobs:
  build:
    runs-on: windows-latest
    env:
      folders: ",\\UI,\\UI\\WorldGen,\\UI\\PlayerResourceSets,\\UI\\PlayerResourceSets\\HorizontalBars,\\UI\\PlayerResourceSets\\FancyClassic,\\UI\\CharCreation,\\UI\\WorldCreation,\\UI\\Minimap,\\UI\\Minimap\\Leaf,\\UI\\Minimap\\StoneGold,\\UI\\Minimap\\Golden,\\UI\\Minimap\\Default,\\UI\\Minimap\\Valkyrie,\\UI\\Minimap\\TwigLeaf,\\UI\\Minimap\\Sticks,\\UI\\Minimap\\Retro,\\UI\\Minimap\\Remix,\\UI\\Bestiary,\\UI\\Bestiary\\NPCs,\\UI\\Creative,\\Accessories,\\TownNPCs,\\Armor"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '2.7' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
      - name: dir
        run: dir
      - name: count-files
        run: (Get-ChildItem source-pngs -Recurse -File | Measure-Object).Count

      - name: downscale-pngs
        run: |
          $folders = ${Env:folders} -split ','
          foreach( $folder in $folders ) {
            echo "folder: $folder"
            (New-Item ${Env:output}$folder -ItemType directory)
            tools\downscale_pngs.exe ${Env:input}$folder ${Env:output}$folder
          }
        env:
          input: 'source-pngs'
          output: 'temp2'
      - name: count-files
        run: (Get-ChildItem temp2 -Recurse -File | Measure-Object).Count

      - name: remove separators
        run: |
          $folders = ${Env:folders} -split ','
          foreach( $folder in $folders ) {
            echo "folder: $folder"
            (New-Item ${Env:output}$folder -ItemType directory)
            python tools\remove_separators.py ${Env:input}$folder ${Env:output}$folder
          }
        env:
          input: 'temp2'
          output: 'temp3'
      - name: count-files
        run: (Get-ChildItem temp3 -Recurse -File | Measure-Object).Count

      - name: magnify-pngs
        run: |
          (New-Item ${Env:input}\Items -ItemType directory)
          (Move-Item ${Env:input}\Item_* -Destination ${Env:input}\Items)
          $folders = ${Env:folders} -split ','
          foreach( $folder in $folders ) {
            echo "folder: $folder"
            (New-Item ${Env:output}$folder -ItemType directory)
            tools\image_filter.exe "XBRz" ${Env:input}$folder ${Env:output}$folder
          }
          tools\image_filter.exe "XBRz" ${Env:input}\Items ${Env:output}\Items
        env:
          input: 'temp3'
          output: 'temp4'
      - name: count-files
        run: (Get-ChildItem temp4 -Recurse -File | Measure-Object).Count

      - name: refill-missing-pixels
        run: |
          $folders = ${Env:folders} -split ','
          foreach( $folder in $folders ) {
            echo "folder: $folder"
            (New-Item ${Env:output}$folder -ItemType directory)
            tools\refill_missing_pixels.exe ${Env:input}$folder ${Env:output}$folder
          }
        env:
          input: 'temp4'
          output: 'temp5'
      - name: count-files
        run: (Get-ChildItem temp5 -Recurse -File | Measure-Object).Count

      - name: png-to-xnb
        run: |
          $folders = ${Env:folders} -split ','
          foreach( $folder in $folders ) {
            echo "folder: $folder"
            (New-Item ${Env:output}$folder -ItemType directory)
            tools\png_to_xnb.exe ${Env:input}$folder ${Env:output}$folder
          }
        env:
          input: 'temp5'
          output: 'temp6'
      - name: count-files
        run: (Get-ChildItem temp6 -Recurse -File | Measure-Object).Count
